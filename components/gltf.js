/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

const ModelGLTF = React.forwardRef(({model, action, ...props}, ref) => {

  useGLTF.preload(model)

  const modelRef = useRef()

  const group = useRef()
  const { nodes, materials } = useGLTF(model)

  let _material = materials['Material.001']
  _material.wireframe = false

  const MeshName = Object.keys(nodes)

  return (
    <group ref={ref} {...props} dispose={null} >
      <mesh
        receiveShadow
        castShadow
        geometry={nodes[MeshName[1]].geometry}
        onPointerOver={ () => console.log('in') }
        onPointerLeave={ () => console.log('out') }
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.01}
      >
        <meshStandardMaterial attach="material" color={0xffffff} />
      </mesh>
    </group>
  )
})

export default ModelGLTF

